/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ufc.fbd.visao;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import ufc.fbd.conexao.Conexao;
import ufc.fbd.modelo.Aluga;
import ufc.fbd.modelo.AlugaDAO;
import ufc.fbd.modelo.Filme;
import ufc.fbd.modelo.FilmeDAO;
import ufc.fbd.modelo.Funcionario;

/**
 *
 * @author Luan
 */
public class TabelaFilmes extends javax.swing.JFrame implements TableModelListener{

    /**
     * Creates new form ListaClientes
     */
    
    private DefaultTableModel modelo;
    private FilmeDAO filmeDAO;
    private Connection conexao;
    private int selecionada = -1;
    private Funcionario funcionarioLogado;
    private AlugaDAO alugaDAO;
    
    public TabelaFilmes(Funcionario funcionarioLogado) {
        this.funcionarioLogado = funcionarioLogado;
        montandoModeloTabela();
        initComponents();
        setLocationRelativeTo(null);
        conexao = new Conexao().getConexao();
        filmeDAO = new FilmeDAO(conexao);
        alugaDAO = new AlugaDAO(conexao);
        verificacaoInicial();
        preenchendoListaFilmes("");
           jTable1.addMouseListener(new MouseListener() {

              @Override
              public void mouseClicked(MouseEvent e) {
                  selecionada = jTable1.getSelectedRow();
                  btEditar.setEnabled(false);
                  btExcluir.setEnabled(false);
                  if(selecionada != -1){
                      linhaSelecionada();
                  }
              }

              @Override
              public void mousePressed(MouseEvent e) {
              }

              @Override
              public void mouseReleased(MouseEvent e) {
              }

              @Override
              public void mouseEntered(MouseEvent e) {
              }

              @Override
              public void mouseExited(MouseEvent e) {
             }
          });
           
           btEditar.setEnabled(false);
           btExcluir.setEnabled(false);
           btAlugar.setEnabled(false);
           btDevolucao.setEnabled(false);
    }
    
    private void montandoModeloTabela(){
          modelo = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Indicação", "Categoria", "Alugado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    }
    
    private void linhaSelecionada(){
        btEditar.setEnabled(true);
        btExcluir.setEnabled(true);
        if(selecionada > -1){
            String valor = (String) modelo.getValueAt(selecionada, 4);
            if(valor.equals("Não")){
                 btAlugar.setEnabled(true);
            }else{
                 btDevolucao.setEnabled(true);
            }
        }
        
    }
    
   private void removendoLinhasTabela(){
       modelo.setRowCount(0);
    }
    private void preenchendoListaFilmes(String nome){
        removendoLinhasTabela();
        List<Filme> listaFilmes = filmeDAO.getFilmesNome(nome);
        if(listaFilmes != null){
            for(Filme filme : listaFilmes){
                String alugado = "Não";
                if(filme.isAlugado())
                    alugado = "Sim";
                modelo.addRow(new Object[]{filme.getIdFilme(), filme.getNome(), "+"+filme.getIndicacao(), filme.getCategoria().getCategoria(), alugado});
            }
        }
    }
    
    private void verificacaoInicial(){
        List<Filme> listaFilmes = filmeDAO.getFilmes();
        if(listaFilmes != null && listaFilmes.size() > 0){
        }else{
            JOptionPane.showMessageDialog(null, "Não existem filmes cadastrados."); 
            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btVisualizar = new javax.swing.JButton();
        btAlugar = new javax.swing.JButton();
        tfBusca = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btDevolucao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(620, 443));
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(620, 443));
        jPanel1.setMinimumSize(new java.awt.Dimension(620, 443));

        jTable1.setModel(modelo);
        jScrollPane1.setViewportView(jTable1);

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btVisualizar.setText("Visualizar Todos");
        btVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVisualizarActionPerformed(evt);
            }
        });

        btAlugar.setText("Alugar");
        btAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlugarActionPerformed(evt);
            }
        });

        tfBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBuscaKeyTyped(evt);
            }
        });

        jLabel1.setText("Pesquisa:");

        btDevolucao.setText("Devolução");
        btDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDevolucaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfBusca)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSair))
                    .addComponent(btVisualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAlugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btEditar)
                .addGap(18, 18, 18)
                .addComponent(btExcluir)
                .addGap(18, 18, 18)
                .addComponent(btAlugar)
                .addGap(18, 18, 18)
                .addComponent(btDevolucao)
                .addGap(18, 18, 18)
                .addComponent(btVisualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSair)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if(selecionada > -1){
            Integer id = (Integer) modelo.getValueAt(selecionada, 0);
            if(JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o filme selecionado?", "Exclusão", 2)== JOptionPane.OK_OPTION){
            filmeDAO.dropFilme(id);
                preenchendoListaFilmes(tfBusca.getText());
            selecionada = -1;
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione o Filme na tabela");
        }
        atualizarAutomaticamente();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        if(selecionada > -1){
            Integer id = (Integer) modelo.getValueAt(selecionada, 0);
            Filme filme = filmeDAO.getFilme(id);
            new EditarFilme(funcionarioLogado, filme).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Selecione o Filme na tabela");
        }
        atualizarAutomaticamente();
    }//GEN-LAST:event_btEditarActionPerformed

    private void atualizarAutomaticamente(){
         new Thread(new Runnable() {

             @Override
             public void run() {
                 try {
                     Thread.sleep(500);
                      preenchendoListaFilmes(tfBusca.getText());
                 } catch (InterruptedException ex) {
                     Logger.getLogger(TabelaFilmes.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
         }).start();
    }
    
    private void btVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVisualizarActionPerformed
        new ListaFilmes().setVisible(true);
    }//GEN-LAST:event_btVisualizarActionPerformed

    private void tfBuscaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscaKeyTyped
        preenchendoListaFilmes(tfBusca.getText());
    }//GEN-LAST:event_tfBuscaKeyTyped

    private void btAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlugarActionPerformed
         if(selecionada > -1){
            Integer id = (Integer) modelo.getValueAt(selecionada, 0);
             Filme filme = filmeDAO.getFilme(id);
             new SelecaoClienteParaAlugar(funcionarioLogado, filme).setVisible(true);
            selecionada = -1;
        }else{
            JOptionPane.showMessageDialog(null, "Selecione o Filme na tabela");
        }
         atualizarAutomaticamente();
    }//GEN-LAST:event_btAlugarActionPerformed

    private void btDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDevolucaoActionPerformed
      if(selecionada > -1){
            Integer id = (Integer) modelo.getValueAt(selecionada, 0);
            alugaDAO.realizarDevolucao(id);
            selecionada = -1;
            btDevolucao.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(null, "Selecione o Filme na tabela");
        }
        atualizarAutomaticamente();
    }//GEN-LAST:event_btDevolucaoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlugar;
    private javax.swing.JButton btDevolucao;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btVisualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tfBusca;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {
    }
}
